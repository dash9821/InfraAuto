name: Terraform Plan
on: [pull_request]

permissions:
  id-token: write
  contents: read

jobs:
  lint:
    name: Terraform Format check
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          teraform_version: v1.9.7
          terraform_wrapper: false
      
      - name: terraform FMT
        run: |
          terraform fmt -check -diff
          cd environments && terraform fmt -check -recursive -diff
  get_workspace_list:
    name: List Workspaces
    runs-on: [ubuntu-latest]
    outputs:
      workspaces: ${{ steps.get_workspaces.outputs.workspaces }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          teraform_version: v1.9.7
          terraform_wrapper: false
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ap-south-1
          role-to-assume: arn:aws:iam::941377147400:role/GitHub-Role
      
      - name: Initialize terraform 
        run: terraform init

      - name: Get Workspaces
        id: get_workspaces
        run: |
          workspaces=$(terraform workspace list | sed 's/* //g' | tr '\n' ' ')
          echo "Workspaces: $workspaces"
          # Run the Python script to generate a JSON array
          echo "$workspaces" | python3 ./scripts/workspace_to_json.py > workspaces.json
          workspaces=$(cat workspaces.json)
          echo $workspaces

  Terraform_Plan:
    runs-on: [ubuntu-latest]
    needs: get_workspace_list
    strategy:
      matrix:
        workspace: ${{ fromJson(needs.get_workspace_list.outputs.workspaces) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          teraform_version: v1.9.7
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ap-south-1
          role-to-assume: arn:aws:iam::941377147400:role/GitHub-Role
      
      - name: Initialize terraform 
        run: |
          terraform init
          terraform workspace select ${{matrix.workspace}}

      - name: Terraform Plan
        run: |
          terraform plan -no-color

